#!/usr/bin/env bash
#
# Generate an SSH key with reasonable defaults

usage () {
  printf '%s\n' "Usage: $(basename "$0") [-h] [DIR]
Generate and install an SSH key.

where:
  -h,--help show this help text"
}

## Option parsing
PARAMS=""

while (( "$#" )); do
  case "$1" in
    -h|--help)
      usage
      exit 1
      ;;
    --) # end argument parsing
      shift
      break
      ;;
    -*|--*=) # unsupported flags
      echo "Error: Unsupported flag $1" >&2
      usage
      exit 1
      ;;
    *) # preserve positional arguments
      PARAMS="$PARAMS $1"
      shift
      ;;
  esac
done
# set positional arguments in their proper place
eval set -- "$PARAMS"

# Configs
key="${1:-"bbclark-$(hostname)"}"
path="$HOME/.ssh"
private_key_path="${path}/${key}"
public_key_path="${private_key_path}.pub"

# Check for key
if [[ -f "$private_key_path" ]]; then
  echo "Aborting, key already exists: $private_key_path"
  exit 0
fi

# Get input
echo "Generating SSH key"
read -p 'Email: ' email

# Generate key
mkdir -p "$path"
ssh-keygen -t rsa -b 4096 -C "$email" -f "$private_key_path"
[ $? -ne 0 ] && exit 1

# Add to user-agent
eval "$(ssh-agent -s)"
ssh-add "$private_key_path"

# Print public key
echo "New public key:"
cat "$public_key_path"

# Print follow-up steps
url='https://github.com/settings/ssh/new'
printf '\n%s\n' "Add key to github: $url"

# Wait for confirmation
read -p $'\n'"<Press enter to finish>"$'\n'

# Write follow-ups
if [[ ! -z "$UBUNTU_SETUP_TODO" ]]; then
  url='chrome-extension://hdokiejnpimakedhajhdlcegeplioahd/vault.html'

  printf '%s\n' \
"---KEY---
1. Goto LastPass vault: $url
2. Create a new 'SSH Key' item named: $key
3. Copy private key into item: $private_key_path | clipboard
4. Copy public key into item: $public_key_path | clipboard" \
    >> $UBUNTU_SETUP_TODO
fi
