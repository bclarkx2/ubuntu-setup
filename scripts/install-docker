#!/bin/bash

usage() {
  printf '%s\n' "Usage: install-docker [-h]
install-docker installs Docker Engine and CLI.

where:
  -h, --help  - show this help text"
}

main() {
  # Exit if anything goes wrong
  set -e

  # Set up PPA
  sudo apt-get update
  sudo apt-get install ca-certificates curl
  sudo install -m 0755 -d /etc/apt/keyrings
  sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
  sudo chmod a+r /etc/apt/keyrings/docker.asc

  # Add the repository to Apt sources:
  echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  sudo apt-get update

  # Install packages
  sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

  # Create group of users who can run docker
  sudo groupadd docker

  # Add current user to that docker group
  sudo usermod -aG docker "${USER}"

  # Refresh user group status
  newgrp docker

  # Verify installation
  docker run hello-world
}

# Option parsing
declare PARAMS=""
while (( "$#" )); do
  case $1 in
    -h|--help)  # display help message
      usage
      exit 1
      ;;
    --)  # End argument parsing
      shift
      break
      ;;
    -*|--*)  # unsupported flags
      echo "Unsupported flag: $1" >&2
      usage
      exit 1
      ;;
    *)  # preserve positional arguments
      PARAMS="${PARAMS} $1"
      shift
      ;;
  esac
done

# set positional arguments in their proper place
eval set -- "${PARAMS}"

# Freeze configuration flags
# readonly SOME_FLAG

main "@"
